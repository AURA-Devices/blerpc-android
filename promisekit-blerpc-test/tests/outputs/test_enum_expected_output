import Foundation

extension My_Device_SetValueResponse {

    /// Convert data to My_Device_SetValueResponse proto object
    /// - parameter data: data which needs to be converted
    /// - returns: decoded proto object
    static func decode(data: Data) -> My_Device_SetValueResponse {
        var proto = My_Device_SetValueResponse()
        proto.intValue = ProtoDecoder.decode(data: data, from: 0, to: 4, type: "TYPE_INT32") as! TYPE_INT32
        proto.enumValue = My_Device_EnumTestType.init(rawValue: ProtoDecoder.decode(data: data, from: 4, to: 5, type: "TYPE_INT32") as! Int)!
        return proto
    }

    /// Convert My_Device_SetValueResponse proto object to raw data
    /// - parameter proto: proto object which needs to be converted
    /// - returns: encoded data
    static func encode(proto: My_Device_SetValueResponse) -> Data {
        var data = Data()
        data.append(ProtoEncoder.encode(object: proto.intValue, from: 0, to: 4, type: "TYPE_INT32"))
        data.append(ProtoEncoder.encode(object: proto.enumValue.rawValue, from: 4, to: 5, type: "TYPE_ENUM"))
        return data
    }

}
