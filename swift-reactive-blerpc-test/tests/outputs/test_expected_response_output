import Foundation

extension Device_GetValueResponse {
    /// Convert data to Device_GetValueResponse proto object.
    /// - parameter data: data which needs to be converted.
    /// - returns: decoded proto object.
    static func bleRpcDecode(data _: Data) throws -> Device_GetValueResponse {
        var proto = Device_GetValueResponse()
        proto.intValue = try ProtoDecoder.decode(data: data, from: 0, to: 4, type: ProtoType.int32) as! TYPE_INT32
        return proto
    }

    /// Convert Device_GetValueResponse proto object to raw data.
    /// - parameter proto: proto object which needs to be converted.
    /// - returns: encoded data.
    static func bleRpcEncode(proto _: Device_GetValueResponse) throws -> Data {
        var data = Data()
        data.append(try ProtoEncoder.encode(object: proto.intValue, from: 0, to: 4, type: ProtoType.int32))
        return data
    }
}
