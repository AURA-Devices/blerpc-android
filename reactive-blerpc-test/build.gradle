apply plugin: 'com.android.library'
apply plugin: 'com.google.protobuf'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    defaultConfig {
        minSdkVersion 21
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

configurations.all {
    resolutionStrategy {
        force 'com.google.code.findbugs:jsr305:3.0.0'
    }
}

dependencies {
    implementation group: 'findbugs', name: 'annotations', version: '1.0.0'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.protobuf:protobuf-java:3.5.1'
    implementation 'com.google.protobuf:protoc:3.0.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.0'
    implementation "com.github.monnoroch:blerpcproto-android:${reactivePluginVersion}"
    implementation "com.github.monnoroch:blerpc-android:${reactivePluginVersion}"
    testImplementation "org.robolectric:robolectric:3.7.1"
    testImplementation 'junit:junit:4.12'
    testImplementation "org.mockito:mockito-inline:2.7.22"
    testImplementation 'com.google.truth:truth:0.40'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        reactive {
            path = "${project.rootProject.projectDir}/generated/reactive-blerpc"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {}
            }
            task.plugins {
                reactive {}
            }
        }
    }
}
