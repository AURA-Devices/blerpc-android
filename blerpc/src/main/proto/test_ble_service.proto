syntax = "proto3";

option java_package = "com.blerpc.device.test.proto";
option java_multiple_files = true;
option optimize_for = CODE_SIZE;
option java_generic_services = true;

package com.device.test;

import "blerpc.proto";

message TestBleWriteRequest {
  option (com.blerpc.message) = {
        size_bytes: 28
    };

  int32 int_value = 1 [(com.blerpc.field) = {
        from_byte: 0
        to_byte: 4
    }];
  int64 long_value = 2 [(com.blerpc.field) = {
        from_byte: 4
        to_byte: 12
    }];
  bool bool_value = 3 [(com.blerpc.field) = {
        from_byte: 12
        to_byte: 13
    }];
  TestValuesEnum enum_value = 4 [(com.blerpc.field) = {
        from_byte: 14
        to_byte: 15
    }];
  TestIntegerEmbeddedMessage message_value = 5 [(com.blerpc.field) = {
        from_byte: 16
        to_byte: 20
    }];
  bytes byte_string_value = 6 [(com.blerpc.field) = {
        from_byte: 20
        to_byte: 24
    }];
  int32 little_endian_int_value = 7 [(com.blerpc.field) = {
        from_byte: 24
        to_byte: 28
        byte_order: LITTLE_ENDIAN
    }];
}

message TestBleWriteResponse {
  option (com.blerpc.message) = {
        size_bytes: 36
        byte_order: LITTLE_ENDIAN
    };

  int32 int_value = 1 [(com.blerpc.field) = {
        from_byte: 0
        to_byte: 4
    }];
  int64 long_value = 2 [(com.blerpc.field) = {
        from_byte: 4
        to_byte: 12
    }];
  bool bool_value = 3 [(com.blerpc.field) = {
        from_byte: 12
        to_byte: 13
    }];
  TestValuesEnum enum_value = 4 [(com.blerpc.field) = {
        from_byte: 14
        to_byte: 15
    }];
  TestIntegerEmbeddedMessage message_value = 5 [(com.blerpc.field) = {
        from_byte: 16
        to_byte: 20
    }];
  bytes byte_string_value = 6 [(com.blerpc.field) = {
        from_byte: 20
        to_byte: 24
    }];
  int32 big_endian_int_value = 7 [(com.blerpc.field) = {
        from_byte: 24
        to_byte: 28
        byte_order: BIG_ENDIAN
    }];
  TestLittleEndianMessage little_endian_value = 8 [(com.blerpc.field) = {
        from_byte: 28
        to_byte: 36
        byte_order: BIG_ENDIAN
    }];
}

message TestBleReadRequest {
  option (com.blerpc.message) = {
        size_bytes: 4
    };

  int32 int_value = 1 [(com.blerpc.field) = {
        from_byte: 0
        to_byte: 4
    }];
}

message TestBleReadResponse {
  option (com.blerpc.message) = {
        size_bytes: 4
    };

  int32 int_value = 1 [(com.blerpc.field) = {
        from_byte: 0
        to_byte: 4
    }];
}

message TestBleSubscribeRequest {
  option (com.blerpc.message) = {
        size_bytes: 4
    };

  int32 int_value = 1 [(com.blerpc.field) = {
        from_byte: 0
        to_byte: 4
    }];
}

message TestBleSubscribeResponse {
  option (com.blerpc.message) = {
        size_bytes: 4
    };

  int32 int_value = 1 [(com.blerpc.field) = {
        from_byte: 0
        to_byte: 4
    }];
}

message TestIntegerEmbeddedMessage {
  option (com.blerpc.message) = {
        size_bytes: 4
    };

  int32 int_value = 1 [(com.blerpc.field) = {
        from_byte: 0
        to_byte: 4
    }];
}

message TestLittleEndianMessage {
  option (com.blerpc.message) = {
        size_bytes: 8
        byte_order: LITTLE_ENDIAN
    };

  int64 long_value = 1 [(com.blerpc.field) = {
        from_byte: 0
        to_byte: 8
    }];
}

enum TestValuesEnum {
  UNKNOWN = 0;
  VALUE_1 = 1;
  VALUE_2 = 2;
}

service TestBleService {
  option (com.blerpc.service) = {
        uuid: "F0CDAA70-0451-4000-B000-000000000000"
    };

  rpc TestWriteChar (TestBleWriteRequest) returns (TestBleWriteResponse) {
    option (com.blerpc.characteristic) = {
            uuid: "F0CDAA72-0451-4000-B000-000000000000"
            type: WRITE
        };
  }

  rpc TestSubscribeChar (TestBleSubscribeRequest) returns (stream TestBleSubscribeResponse) {
    option (com.blerpc.characteristic) = {
            uuid: "F0CDAA72-0451-4000-B000-000000000000"
            descriptor_uuid: "F0CDBB72-0451-4000-B000-000000000000"
            type: SUBSCRIBE
        };
  }

  rpc TestSubscribeCharCopy (TestBleSubscribeRequest) returns (stream TestBleSubscribeResponse) {
    option (com.blerpc.characteristic) = {
            uuid: "F0CDAA72-0451-4000-B000-000000000000"
            descriptor_uuid: "F0CDBB72-0451-4000-B000-000000000000"
            type: SUBSCRIBE
        };
  }

  rpc TestReadChar (TestBleReadRequest) returns (TestBleReadResponse) {
    option (com.blerpc.characteristic) = {
            uuid: "F0CDAA72-0451-4000-B000-000000000000"
            type: READ
        };
  }

  rpc TestReadChar2 (TestBleReadRequest) returns (TestBleReadResponse) {
    option (com.blerpc.characteristic) = {
            uuid: "F0CDBA74-0451-4000-B000-000000000000"
            type: READ
        };
  }

  rpc TestWriteChar2 (TestBleReadRequest) returns (TestBleReadResponse) {
    option (com.blerpc.characteristic) = {
            uuid: "F0CDBA74-0451-4000-B000-000000000000"
            type: WRITE
        };
  }

  rpc TestSubscribeChar2 (TestBleSubscribeRequest) returns (stream TestBleSubscribeResponse) {
    option (com.blerpc.characteristic) = {
            uuid: "F0CDBA74-0451-4000-B000-000000000000"
            descriptor_uuid: "F0CDBB74-0451-4000-B000-000000000000"
            type: SUBSCRIBE
        };
  }
}
